a
a <- 1
a
install.packages("shiny")
library(shiny)
??shiny
library(psych)
?factor.plot
?fa.parallel
library(psych)
?fa.parallel()
install.packages("effeccts")
install.packages("effects")
library(effects)
?effect
?hist
?predict
cars
?cars
knitr::opts_chunk$set(echo = TRUE)
```{r}
```{r cars}
```{r cars}
summary(cars)
```{r mpg}
summary(mpg)
```{r mpg}
summary(mpg)
?setup
pressure
cars
mpg
library(ggplot2)
mpg
```{r mpg}
summary(mpg)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
```{r mpg}
summary(mpg)
mpg1 <- mpg[, c("manufacturer, model, trans, drv, hwy, class")]
mpg1 <- mpg[, c("manufacturer", "model", "trans", "drv", "hwy", "class")]
View(mpg1)
rownames(mpg1)
colnames(mpg1)
colnames(mpg1)["drv"]
colnames(mpg1)[4]
colnames(mpg1)[4] <- "driveType"
colnames(mpg1)[4]
colnames(mpg1)[c(3, 4, 5)] <- c("TransmissionType", "driveType", "hwyMPG")
colnames(mpg1)
colnames(mpg1)
```{r Problem1, mpg}
```{r mpg, Problem1}
```{r Problem1}
setup
colnames(mpg1)
```{r globaloption, echo=FALSE}
```{r global_option, echo=FALSE}
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
install.packages('tinytex')
Sys.which('xelatex')
tinytex::install_tinytex()
tinytex::install_tinytex(force = TRUE)
library(caret)
?confusionMatrix
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
iris.df <- read.csv("iris.csv")
iris.df
library(tidyr)
library(tidyverse)
tribble(~"pregnant", ~"male", ~"female", "yes", NA, 10, "no", 20, 12)
temp <- tribble(~"pregnant", ~"male", ~"female", "yes", NA, 10, "no", 20, 12)
temp %>% gather("male", "female", key = "sex", value = "count")
temp %>% gather("male", "female", key = "gender", value = "count")
?spread
library(tidyverse)
flights
library(nycflights13)
flights
data <- flight %>% select("year", "month", "day", "flight", "tailnum")
data <- flights %>% select("year", "month", "day", "flight", "tailnum")
data
flightes
flights
data
data <- flights %>% select(year, "month", "day", "flight", "tailnum")
data
data <- flights %>% select(year, month, day, flight, tailnum)
data
data <- data %>% unite(date, year, month, sep = "/")
data
data <- data %>% unite(date, year, month, sep = "/")
data
?Count
?Count()
count()
?count()
data %>% count(date, sort = TRUE)
data
data %>% count(date, sort = TRUE)
data %>% count(date)
data %>% count(date, sort = FALSE)
data %>% count(date, sort = TRUE)
?group_by
?summarise
?count()
library(shiny)
runExample("10_download")
runExample("08_html")
runExample("08_html")
getwd()
shiny::runApp('C:/Users/43884/Desktop/R shiny Project')
runApp('C:/Users/43884/Desktop/R shiny Project')
runApp('C:/Users/43884/Desktop/R shiny Project')
install.packages("map")
install.packages("map_data")
library(shiny)
library(dplyr)
library(shinydashboard)
library(ggplot2)
runApp('C:/Users/43884/Desktop/R shiny Project')
install.packages("maps")
runApp('C:/Users/43884/Desktop/R shiny Project')
install.packages("mapproj")
runApp('C:/Users/43884/Desktop/R shiny Project')
cl
strsplit('23 60 79 32 57 74 52 70 82
36 80 77 81 95 41 65 92 85
55 76 52 10 64 75 78 25 80
98 81 67 41 71 83 54 64 72
88 62 74 43 60 78 89 76 84
48 84 90 15 79 34 67 17 82
69 74 63 80 85 61', " ", true)
strsplit("23 60 79 32 57 74 52 70 82
36 80 77 81 95 41 65 92 85
55 76 52 10 64 75 78 25 80
98 81 67 41 71 83 54 64 72
88 62 74 43 60 78 89 76 84
48 84 90 15 79 34 67 17 82
69 74 63 80 85 61', " ", true)
strsplit("23 60 79 32 57 74 52 70 82
36 80 77 81 95 41 65 92 85
55 76 52 10 64 75 78 25 80
98 81 67 41 71 83 54 64 72
88 62 74 43 60 78 89 76 84
48 84 90 15 79 34 67 17 82
69 74 63 80 85 61', " ", true)
strsplit("23 60 79 32 57 74 52 70 82
36 80 77 81 95 41 65 92 85
55 76 52 10 64 75 78 25 80
98 81 67 41 71 83 54 64 72
88 62 74 43 60 78 89 76 84
48 84 90 15 79 34 67 17 82
69 74 63 80 85 61", " ", true)
strsplit("23 60 79 32 57 74 52 70 82
36 80 77 81 95 41 65 92 85
55 76 52 10 64 75 78 25 80
98 81 67 41 71 83 54 64 72
88 62 74 43 60 78 89 76 84
48 84 90 15 79 34 67 17 82
69 74 63 80 85 61", " ")
strsplit("23 60 79 32 57 74 52 70 82
36 80 77 81 95 41 65 92 85
55 76 52 10 64 75 78 25 8098 81 67 41 71 83 54 64 72 88 62 74 43 60 78 89 76 84 48 84 90 15 79 34 67 17 82 69 74 63 80 85 61", " ")
strsplit("23 60 79 32 57 74 52 70 82 36 80 77 81 95 41 65 92 85 55 76 52 10 64 75 78 25 80 98 81 67 41 71 83 54 64 72 88 62 74 43 60 78 89 76 84 48 84 90 15 79 34 67 17 82 69 74 63 80 85 61", " ")
a -strsplit("23 60 79 32 57 74 52 70 82 36 80 77 81 95 41 65 92 85 55 76 52 10 64 75 78 25 80 98 81 67 41 71 83 54 64 72 88 62 74 43 60 78 89 76 84 48 84 90 15 79 34 67 17 82 69 74 63 80 85 61", " ")
a <- strsplit("23 60 79 32 57 74 52 70 82 36 80 77 81 95 41 65 92 85 55 76 52 10 64 75 78 25 80 98 81 67 41 71 83 54 64 72 88 62 74 43 60 78 89 76 84 48 84 90 15 79 34 67 17 82 69 74 63 80 85 61", " ")
a
as.integer(a)
as.integer(a[:])
as.numeric(a)
sapply(a, as.numeric)
a <- sapply(a, as.numeric)
a
sort(a)
a <- strsplit("23 60 79 32 57 74 52 70 82 36 80 77 81 95 41 65 92 85 55 76 52 10 64 75 78 25 80 98 81 67 41 71 83 54 64 72 88 62 74 43 60 78 89 76 84 48 84 90 15 79 34 67 17 82 69 74 63 80 85 61", " ")
a
a <- sapply(a, as.numeric)
a
sort(a)
wheat<- data.frame(
x=c(5.4,5.3,6.1,5.1,5.6,5.1,4.5,6,6.6,6.5,5.8,6.2,5.6), a=factor(c(rep(1,3),rep(2,4),rep(3,3),rep(4,3))))
wheat
aov
rep("Aromatics", 5)
data <- data.frame(x = c(1.06, 0.79, 0.82, 0.89, 1.05, 0.95, 0.65, 1.15, 1.12, 1.58, 1.45, 0.57, 1.16, 1.12, 0.91, 0.83, 0.43, 0.29, 0.06, 0.44, 0.55, 0.61, 0.43, 0.51, 0.1, 0.53, 0.34, 0.06, 0.09, 0.17, 0.17, 0.6), a = factor(c(rep("Aromatics", 9), rep("Chloroalkanes", 8), rep("Esters", 15))))
View(data)
result <- aov(x~a, data)
summary(result)
rep(c(1, 2, 3, 4), 3)
rep(c(1, 2, 3, 4), c(3, 3, 3, 3))
#13.16
data <- data.frame(x = c(25.6, 24.3, 27.9, 25.2, 28.6, 24.7, 20.8, 26.7, 22.2, 31.6, 29.8, 34.3), a = c(rep(c(1, 2, 3, 4), c(3, 3, 3, 3))))
View(data)
result <- bartlett.test(x~a, data)
summary(result)
bartlett.test(x~a, data)
#13.16
data <- data.frame(x = c(25.6, 24.3, 27.9, 25.2, 28.6, 24.7, 20.8, 26.7, 22.2, 31.6, 29.8, 34.3), a = factor(rep(c(1, 2, 3, 4), c(3, 3, 3, 3))))
result <- aov(x~a, data)
summary(result)
install.packages("agricolae")
library(agricolae)
duncan.test(result)
duncan.test(result, "a")
duncan.test(result, "a", console=TRUE)
duncan.test(result, "r", console=TRUE)
duncan.test(result, "r", console=TRUE)
duncan.test(result, "a", console=TRUE)
duncan.test(result, c(1, 2, 3, 4), console=TRUE)
duncan.test(result, "a", console=TRUE)
TukeyHSD(result)
#13.16
data <- data.frame(x = c(25.6, 24.3, 27.9, 25.2, 28.6, 24.7, 20.8, 26.7, 22.2, 31.6, 29.8, 34.3), a = factor(rep(c(1, 2, 3, 4), c(3, 3, 3, 3))))
result <- aov(x~a, data)
summary(result)
#13.39
data <- data.frame(x = c(175.4, 171.7, 173, 170.5, 168.5, 162.7, 165, 164.1, 170.1, 173.4, 175.7, 170.7, 175.2, 175.7, 180.1, 183.7), a = a = factor(rep(c(1, 2, 3, 4), c(4, 4, 4, 4))))
#13.39
data <- data.frame(x = c(175.4, 171.7, 173, 170.5, 168.5, 162.7, 165, 164.1, 170.1, 173.4, 175.7, 170.7, 175.2, 175.7, 180.1, 183.7), a = factor(rep(c(1, 2, 3, 4), c(4, 4, 4, 4))))
summary(result)
result <- aov(x~a, data)
summary(result)
library(shiny)
setwd("D:/Matertials/data visualization/final project/project")
runApp("../project/")
runApp("../project/", launch.browser = T)
